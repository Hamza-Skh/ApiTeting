{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-14T09:45:10.483Z",
    "end": "2023-07-14T09:45:13.288Z",
    "duration": 2805,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "807d2172-64b5-4cd9-9b66-5a262a47c651",
      "title": "",
      "fullFile": "cypress/e2e/apiTesting/usersEndPoint.cy.js",
      "file": "cypress/e2e/apiTesting/usersEndPoint.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ed8d6a15-7591-479d-b5ff-4225a85e8994",
          "title": "users API Testing ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "get all the user",
              "fullTitle": "users API Testing  get all the user",
              "timedOut": null,
              "duration": 312,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const GetAllUser = _userApi.default.getAllUser();\nGetAllUser.then(res => {\n  cy.log(res.body);\n  expect(res.status).eq(200);\n  expect(res.body).have.length(10);\n});",
              "err": {},
              "uuid": "e4db29db-241c-4530-b65d-cf05b6b39bb4",
              "parentUUID": "ed8d6a15-7591-479d-b5ff-4225a85e8994",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "create new user",
              "fullTitle": "users API Testing  create new user",
              "timedOut": null,
              "duration": 371,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  \"name\": \"cypress\",\n  \"gender\": \"male\",\n  \"email\": _userApi.default.generateRandomEmail(),\n  \"status\": \"active\"\n};\n_userApi.default.createNewUser(requestBody).then(response => {\n  expect(response.status).eq(201);\n  expect(response.body.name).eq('cypress');\n  expect(response.body).to.have.property('status', 'active');\n});",
              "err": {},
              "uuid": "bfd77db5-dbbd-4453-8fcd-69127c3d2b9a",
              "parentUUID": "ed8d6a15-7591-479d-b5ff-4225a85e8994",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify new user cannot be created without email",
              "fullTitle": "users API Testing  verify new user cannot be created without email",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  \"name\": \"cypress\",\n  \"gender\": \"male\",\n  \"status\": \"active\"\n};\n_userApi.default.createNewUser(requestBody).then(response => {\n  expect(response.status).to.eq(422);\n  expect(response.body[0].field).eq('email');\n  expect(response.body[0]).to.have.property('message', \"can't be blank\");\n});",
              "err": {},
              "uuid": "4718b0d0-744d-4303-8465-708f9f690080",
              "parentUUID": "ed8d6a15-7591-479d-b5ff-4225a85e8994",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify new user cannot be created without name",
              "fullTitle": "users API Testing  verify new user cannot be created without name",
              "timedOut": null,
              "duration": 294,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  \"gender\": \"male\",\n  \"email\": _userApi.default.generateRandomEmail(),\n  \"status\": \"active\"\n};\n_userApi.default.createNewUser(requestBody).then(response => {\n  expect(response.status).eq(422);\n  expect(response.body[0].field).eq('name');\n  expect(response.body[0]).to.have.property('message', \"can't be blank\");\n});",
              "err": {},
              "uuid": "e94cc582-c200-4610-bd24-ec27a4ee44c2",
              "parentUUID": "ed8d6a15-7591-479d-b5ff-4225a85e8994",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "update user",
              "fullTitle": "users API Testing  update user",
              "timedOut": null,
              "duration": 816,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody1 = {\n  \"name\": \"cypress\",\n  \"gender\": \"male\",\n  \"email\": _userApi.default.generateRandomEmail(),\n  \"status\": \"active\"\n};\n_userApi.default.createNewUser(requestBody1).then(response => {\n  expect(response.status).eq(201);\n  expect(response.body.name).eq('cypress');\n  expect(response.body).to.have.property('status', 'active');\n  const userID = response.body.id;\n  const requestBody2 = {\n    \"name\": \"sosos\",\n    \"gender\": \"male\",\n    \"email\": _userApi.default.generateRandomEmail(),\n    \"status\": \"inactive\"\n  };\n  _userApi.default.updateUser(userID, requestBody2).then(response => {\n    expect(response.status).eq(200);\n    expect(response.body.name).eq('sosos');\n    expect(response.body.status).eq('inactive');\n  });\n});",
              "err": {},
              "uuid": "db838b22-1a49-4ce4-81b7-c647f6f01e7b",
              "parentUUID": "ed8d6a15-7591-479d-b5ff-4225a85e8994",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete user",
              "fullTitle": "users API Testing  delete user",
              "timedOut": null,
              "duration": 635,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  \"name\": \"cypress\",\n  \"gender\": \"male\",\n  \"email\": _userApi.default.generateRandomEmail(),\n  \"status\": \"active\"\n};\n_userApi.default.createNewUser(requestBody).then(response => {\n  expect(response.status).eq(201);\n  expect(response.body.name).eq('cypress');\n  expect(response.body).to.have.property('status', 'active');\n  const userID = response.body.id;\n  _userApi.default.DelUser(userID).then(response => {\n    expect(response.status).eq(204);\n    expect(response.body).not.to.have.property('status', 'active');\n  });\n});",
              "err": {},
              "uuid": "a4a69401-aea9-44cf-bc8d-047d9fcb3ad8",
              "parentUUID": "ed8d6a15-7591-479d-b5ff-4225a85e8994",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4db29db-241c-4530-b65d-cf05b6b39bb4",
            "bfd77db5-dbbd-4453-8fcd-69127c3d2b9a",
            "4718b0d0-744d-4303-8465-708f9f690080",
            "e94cc582-c200-4610-bd24-ec27a4ee44c2",
            "db838b22-1a49-4ce4-81b7-c647f6f01e7b",
            "a4a69401-aea9-44cf-bc8d-047d9fcb3ad8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2745,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}