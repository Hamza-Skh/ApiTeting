{
  "stats": {
    "suites": 4,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-14T12:20:59.395Z",
    "end": "2023-07-14T12:21:03.492Z",
    "duration": 4097,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2ba57b6a-85d7-4ff2-b797-f71eeecd3eb0",
      "title": "",
      "fullFile": "cypress/e2e/apiTesting/todosEndPoint.cy.js",
      "file": "cypress/e2e/apiTesting/todosEndPoint.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c97ff0e2-0a1f-446e-83cb-b4e8e5e686ae",
          "title": "Get request of Todos endpoint ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "get all todos ",
              "fullTitle": "Get request of Todos endpoint  get all todos ",
              "timedOut": null,
              "duration": 324,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const todosUsers = _todosApi.default.getAllTodos();\ntodosUsers.then(res => {\n  cy.log(res.body);\n  expect(res.body).to.have.length(10);\n  expect(res.status).eq(200);\n});",
              "err": {},
              "uuid": "50287999-1170-439a-ac4f-dccfb745a0e1",
              "parentUUID": "c97ff0e2-0a1f-446e-83cb-b4e8e5e686ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get Todos of specific ID",
              "fullTitle": "Get request of Todos endpoint  get Todos of specific ID",
              "timedOut": null,
              "duration": 262,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const getUser = _todosApi.default.getSingleTodos();\ngetUser.then(res => {\n  cy.log(res.body);\n  expect(res.status).eq(200);\n  expect(res.body.id).eq(20292);\n  expect(res.body.user_id).eq(3630521);\n});",
              "err": {},
              "uuid": "4676bc9d-2125-48b4-9e8e-52999ea361ab",
              "parentUUID": "c97ff0e2-0a1f-446e-83cb-b4e8e5e686ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get todos by non-existent todos ID throw an error",
              "fullTitle": "Get request of Todos endpoint  get todos by non-existent todos ID throw an error",
              "timedOut": null,
              "duration": 290,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const invalidID = _todosApi.default.invalidID();\ninvalidID.then(res => {\n  cy.log(res.body);\n  expect(res.status).eq(404);\n  expect(res.body).to.have.property(\"message\", \"Resource not found\");\n});",
              "err": {},
              "uuid": "f3cff9c5-9781-4e69-9feb-c97d8bc66b76",
              "parentUUID": "c97ff0e2-0a1f-446e-83cb-b4e8e5e686ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50287999-1170-439a-ac4f-dccfb745a0e1",
            "4676bc9d-2125-48b4-9e8e-52999ea361ab",
            "f3cff9c5-9781-4e69-9feb-c97d8bc66b76"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 876,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7fafc8ef-c066-4081-90fc-03275439456f",
          "title": "POST requests of Todos endpoint ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create new todos ",
              "fullTitle": "POST requests of Todos endpoint  create new todos ",
              "timedOut": null,
              "duration": 304,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const todosBody = {\n  \"user_id\": 3630521,\n  \"title\": \"API testing\",\n  \"due_on\": \"2023-07-14T12:12:12.000+05:30\",\n  \"status\": \"completed\"\n};\nconst newTodos = _todosApi.default.createNewTodo(todosBody);\nnewTodos.then(res => {\n  cy.log(res.body);\n  expect(res.status).eq(201);\n  expect(res.body.title).eq('API testing');\n  expect(res.body.due_on).eq(\"2023-07-14T12:12:12.000+05:30\");\n});",
              "err": {},
              "uuid": "46ad5a1a-202b-45eb-ab87-c7dd08a67b7f",
              "parentUUID": "7fafc8ef-c066-4081-90fc-03275439456f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify new todo present in all todos",
              "fullTitle": "POST requests of Todos endpoint  verify new todo present in all todos",
              "timedOut": null,
              "duration": 572,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const todosBody = {\n  \"user_id\": 3630521,\n  \"title\": \"API testing\",\n  \"due_on\": \"2023-07-14T12:12:12.000+05:30\",\n  \"status\": \"completed\"\n};\nconst newTodos = _todosApi.default.createNewTodo(todosBody);\nnewTodos.then(res => {\n  const Id = res.body.id;\n  const gettodo = _todosApi.default.getNewTodo(Id);\n  gettodo.then(res => {\n    expect(res.status).eq(200);\n    expect(res.body.title).eq('API testing');\n  });\n});",
              "err": {},
              "uuid": "232e3427-e6b9-4990-a3ae-254305e9c3a3",
              "parentUUID": "7fafc8ef-c066-4081-90fc-03275439456f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46ad5a1a-202b-45eb-ab87-c7dd08a67b7f",
            "232e3427-e6b9-4990-a3ae-254305e9c3a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 876,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3f024b07-12bd-4008-bced-cc61be6382db",
          "title": "Put request of Todos endpoint ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify user update todos sucessfully ",
              "fullTitle": "Put request of Todos endpoint  Verify user update todos sucessfully ",
              "timedOut": null,
              "duration": 558,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const todosBody = {\n  \"user_id\": 3630521,\n  \"title\": \"API testing\",\n  \"due_on\": \"2023-07-14T12:12:12.000+05:30\",\n  \"status\": \"pending\"\n};\nconst newTodos = _todosApi.default.createNewTodo(todosBody);\nnewTodos.then(res => {\n  const Id = res.body.id;\n  const todosBody2 = {\n    \"title\": \"API updated testing\",\n    \"due_on\": \"2023-12-14T12:12:12.000+05:30\",\n    \"status\": \"completed\"\n  };\n  const updateTodo = _todosApi.default.updateTodo(Id, todosBody2);\n  updateTodo.then(res => {\n    cy.log(res);\n    expect(res.body.title).eq('API updated testing');\n    expect(res.status).eq(200);\n    expect(res.body.status).eq('completed');\n  });\n});",
              "err": {},
              "uuid": "e63eb238-b408-46f8-8f42-0b8890a3e859",
              "parentUUID": "3f024b07-12bd-4008-bced-cc61be6382db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that a PUT request with invalid status return an error ",
              "fullTitle": "Put request of Todos endpoint  Verify that a PUT request with invalid status return an error ",
              "timedOut": null,
              "duration": 629,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const todosBody = {\n  \"user_id\": 3630521,\n  \"title\": \"API testing\",\n  \"due_on\": \"2023-07-14T12:12:12.000+05:30\",\n  \"status\": \"pending\"\n};\nconst newTodos = _todosApi.default.createNewTodo(todosBody);\nnewTodos.then(res => {\n  const Id = res.body.id;\n  const todosBody2 = {\n    \"status\": \"incomplete\"\n  };\n  const updateTodo = _todosApi.default.updateTodo(Id, todosBody2);\n  updateTodo.then(res => {\n    cy.log(res);\n    expect(res.status).eq(422);\n    expect(res.body[0].field).to.eq('status');\n    expect(res.body[0].message).to.eq(\"can't be blank, can be pending or completed\");\n  });\n});",
              "err": {},
              "uuid": "01a584f9-f198-4380-8977-bb406ced937b",
              "parentUUID": "3f024b07-12bd-4008-bced-cc61be6382db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e63eb238-b408-46f8-8f42-0b8890a3e859",
            "01a584f9-f198-4380-8977-bb406ced937b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1187,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5b9e36c6-1987-42a8-9e63-48886c9fd3f4",
          "title": "DELTE request of todos endpoint",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "delete an existing todo by Id ",
              "fullTitle": "DELTE request of todos endpoint delete an existing todo by Id ",
              "timedOut": null,
              "duration": 537,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const todosBody = {\n  \"user_id\": 3630521,\n  \"title\": \"API testing\",\n  \"due_on\": \"2023-07-14T12:12:12.000+05:30\",\n  \"status\": \"pending\"\n};\nconst newTodos = _todosApi.default.createNewTodo(todosBody);\nnewTodos.then(res => {\n  const Id = res.body.id;\n  const delTodo = _todosApi.default.deleteTodo(Id);\n  delTodo.then(res => {\n    cy.log(res);\n    expect(res.status).eq(204);\n    expect(res.body).to.be.empty;\n    expect(res.body).eq(\"\");\n  });\n});",
              "err": {},
              "uuid": "bc244686-b944-41f7-80c1-683dc332cecb",
              "parentUUID": "5b9e36c6-1987-42a8-9e63-48886c9fd3f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete an existing post by invalid id ",
              "fullTitle": "DELTE request of todos endpoint delete an existing post by invalid id ",
              "timedOut": null,
              "duration": 558,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const todosBody = {\n  \"user_id\": 3630521,\n  \"title\": \"API testing\",\n  \"due_on\": \"2023-07-14T12:12:12.000+05:30\",\n  \"status\": \"pending\"\n};\nconst newTodos = _todosApi.default.createNewTodo(todosBody);\nnewTodos.then(res => {\n  const Id = res.body.id + 2;\n  const delTodo = _todosApi.default.deleteTodo(Id);\n  delTodo.then(res => {\n    cy.log(res);\n    expect(res.status).eq(404);\n    expect(res.body).to.have.property('message', \"Resource not found\");\n  });\n});",
              "err": {},
              "uuid": "5b963a53-b702-4e35-b707-ee460f5a9b04",
              "parentUUID": "5b9e36c6-1987-42a8-9e63-48886c9fd3f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc244686-b944-41f7-80c1-683dc332cecb",
            "5b963a53-b702-4e35-b707-ee460f5a9b04"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1095,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}